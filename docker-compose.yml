version: "3.8"

services:
  api:
    build:
      context: api/.
      dockerfile: Dockerfile
    image: api-im
    container_name: api
    ports:
      - "8080:8000"
    volumes:
      - ./api:/app
    environment:
      - MODE=DEV
      - LOG_LEVEL=INFO
      - DB_NAME=apidb
      - DB_USER=postgres
      - DB_PORT=5432
      - DB_HOST=db
      - DB_PASS=postgres
      - SECRET=hz
      - HASH=HS256
      - RABBITMQ_URL=amqp://admin:admin@rabbitmq:5672/
    depends_on:
      - db
      - rabbitmq

  telegram:
    profiles: ["telegram"]
    container_name: telegram.api
    image: telegram
    build:
      context: .
      dockerfile: Dockerfile.telegram
    restart: unless-stopped
    expose:
      - "5000"
    ports:
      - "5000:5000"
    volumes:
      - ./telegram/config:/app/config:rw
      - ./telegram/src:/app/src:rw
      - ./telegram/logs:/app/logs:rw
    environment:
      - CONFIG_PATH=${CONFIG_PATH:-/app/config/config.toml}
    depends_on:
      - db
      - rabbitmq
    healthcheck:
      test: ["CMD-SHELL", "curl -fsSL http://localhost:5000/healthcheck"]
      interval: 10s
      timeout: 60s
      retries: 5
      start_period: 10s
  db:
    build:
      context: .
      dockerfile: Dockerfile.psql
    container_name: db
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
      POSTGRES_MULTIPLE_DATABASES: apidb,botdb
      POSTGRES_INITDB_ARGS: "--locale=ru_RU.UTF-8"
      LANG: ru_RU.UTF-8
      LC_ALL: ru_RU.UTF-8
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./init-multiple-databases.sh:/docker-entrypoint-initdb.d/init-multiple-databases.sh
    ports:
      - "127.0.0.1:5432:5432"
    restart: unless-stopped

  rabbitmq:
    image: rabbitmq:3-management
    ports:
      - "127.0.0.1:5672:5672"
      - "127.0.0.1:15672:15672"
    environment:
      RABBITMQ_DEFAULT_USER: admin
      RABBITMQ_DEFAULT_PASS: admin
    volumes:
      - rabbitmq_data:/var/lib/rabbitmq

volumes:
  rabbitmq_data:
  postgres_data:
